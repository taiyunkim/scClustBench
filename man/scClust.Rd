% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scClust.R
\name{scClust}
\alias{scClust}
\title{scClust}
\usage{
scClust(
  mat,
  nCs,
  method = "simlr",
  similarity = "pearson",
  geneFilter = 0.8,
  seed = 1,
  ...
)
}
\arguments{
\item{mat}{a (m x n) data matrix of gene expression measurements of individual cells with rows representing genes and columns representing cells.}

\item{nCs}{number of clusters to be estimated}

\item{method}{Clustering method to be performed on the dataset between "`simlr`" implemented version of SIMLR or "`kmeans`" from \emph{amap} package. It is set to "`simlr`" by default.}

\item{similarity}{A similarity metric to be used for clustering. This must be one of "`euclidean`", "`pearson`" or "`spearman`". If `kmeans` is chosen for method, "`manhattan`" and "`maximum`" distances are also available.}

\item{geneFilter}{A threshold to remove genes. The genes that are not expressed more than the threshold across all the cells in the dataset will be removed. Genes will not be removed if set to 0.}

\item{...}{an additional parameters for corresponding clustering method specified from `method`}
}
\value{
For SIMLR, list of 8 elements describing the clusters obtained by SIMLR, of which y are the resulting clusters:
	`y`` = results of k-means clusterings,
 	`S` = similarities computed by SIMLR,
 	`F` = results from network diffiusion,
 	`ydata` = data referring the the results by k-means,
 	`alphaK` = clustering coefficients,
 	`execution.time`` = execution time of the present run,
 	`converge` = iterative convergence values by T-SNE,
 	`LF` = parameters of the clustering

For Kmeans, a list with components:
   `cluster`  = A vector of integers indicating the cluster to which each point is allocated
   `centers`  = A matrix of cluster centres
   `withinss` = The within-cluster sum of squares distance for each cluster
   `size`     = The number of points in each cluster
}
\description{
performs clustering on single-cell RNA-seq data.
}
\examples{
scClust(mat = BuettnerFlorian$in_X, c = BuettnerFlorian$n_clust, method = "simlr", similarity = "pearson")

}
